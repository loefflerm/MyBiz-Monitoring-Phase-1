///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyBiz_Monitoring_Phase_1
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Recording1 recording.
    /// </summary>
    [TestModule("0c49792e-525b-45c0-a978-c905a5f337f2", ModuleType.Recording, 1)]
    public partial class Recording1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyBiz_Monitoring_Phase_1Repository repository.
        /// </summary>
        public static MyBiz_Monitoring_Phase_1Repository repo = MyBiz_Monitoring_Phase_1Repository.Instance;

        static Recording1 instance = new Recording1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Recording1()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Recording1 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MagentaMyBusinessStation.JUsername' at 122;15.", repo.MagentaMyBusinessStation.JUsernameInfo, new RecordItemIndex(0));
            repo.MagentaMyBusinessStation.JUsername.Click("122;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'monitoring' with focus on 'MagentaMyBusinessStation.JUsername'.", repo.MagentaMyBusinessStation.JUsernameInfo, new RecordItemIndex(1));
            repo.MagentaMyBusinessStation.JUsername.PressKeys("monitoring");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1' with focus on 'MagentaMyBusinessStation.JUsername'.", repo.MagentaMyBusinessStation.JUsernameInfo, new RecordItemIndex(2));
            repo.MagentaMyBusinessStation.JUsername.PressKeys("1");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MagentaMyBusinessStation.JPassword' at 86;17.", repo.MagentaMyBusinessStation.JPasswordInfo, new RecordItemIndex(3));
            repo.MagentaMyBusinessStation.JPassword.Click("86;17");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'monitoring' with focus on 'MagentaMyBusinessStation.JPassword'.", repo.MagentaMyBusinessStation.JPasswordInfo, new RecordItemIndex(4));
            repo.MagentaMyBusinessStation.JPassword.PressKeys("monitoring");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1' with focus on 'MagentaMyBusinessStation.JPassword'.", repo.MagentaMyBusinessStation.JPasswordInfo, new RecordItemIndex(5));
            repo.MagentaMyBusinessStation.JPassword.PressKeys("1");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '#' with focus on 'MagentaMyBusinessStation.JPassword'.", repo.MagentaMyBusinessStation.JPasswordInfo, new RecordItemIndex(6));
            repo.MagentaMyBusinessStation.JPassword.PressKeys("#");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MagentaMyBusinessStation.Submit' at 100;28.", repo.MagentaMyBusinessStation.SubmitInfo, new RecordItemIndex(7));
            repo.MagentaMyBusinessStation.Submit.Click("100;28");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest' at 59;222.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.Self.Click("59;222");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Rufnummernplan') on item 'ApplicationUnderTest.Content.Rufnummernplan'.", repo.ApplicationUnderTest.Content.RufnummernplanInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.ApplicationUnderTest.Content.RufnummernplanInfo, "InnerText", "Rufnummernplan");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.PCol12.Text' at 138;6.", repo.ApplicationUnderTest.PCol12.TextInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.PCol12.Text.Click("138;6");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '777' with focus on 'ApplicationUnderTest.PCol12.Text'.", repo.ApplicationUnderTest.PCol12.TextInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.PCol12.Text.PressKeys("777");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.PCol12.NgTnsC6512UiAutocompleteUiAutocom' at 173;172.", repo.ApplicationUnderTest.PCol12.NgTnsC6512UiAutocompleteUiAutocomInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.PCol12.NgTnsC6512UiAutocompleteUiAutocom.Click("173;172");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='43676 3684123') on item 'ApplicationUnderTest.Content.SpanTag436763684123'.", repo.ApplicationUnderTest.Content.SpanTag436763684123Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.ApplicationUnderTest.Content.SpanTag436763684123Info, "InnerText", "43676 3684123");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='BIZ Inclusive VPN 500') on item 'ApplicationUnderTest.Content.BIZInclusiveVPN500'.", repo.ApplicationUnderTest.Content.BIZInclusiveVPN500Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.ApplicationUnderTest.Content.BIZInclusiveVPN500Info, "InnerText", "BIZ Inclusive VPN 500");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='') on item 'ApplicationUnderTest.PCol12.TdTag777'.", repo.ApplicationUnderTest.PCol12.TdTag777Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.ApplicationUnderTest.PCol12.TdTag777Info, "InnerText", "");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'Screenshot1' with region {X=41,Y=24,Width=39,Height=25}) on item 'ApplicationUnderTest.PCol12.TdTag777'.", repo.ApplicationUnderTest.PCol12.TdTag777Info, new RecordItemIndex(16));
            Validate.ContainsImage(repo.ApplicationUnderTest.PCol12.TdTag777Info, TdTag777_Screenshot1, TdTag777_Screenshot1_Options);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Markus') on item 'ApplicationUnderTest.Content.Markus'.", repo.ApplicationUnderTest.Content.MarkusInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.ApplicationUnderTest.Content.MarkusInfo, "InnerText", "Markus");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='T-Mobile GmbH (16530) Testautomatisierung SQA') on item 'ApplicationUnderTest.Content.TMobileGmbH16530Testautomatisierun'.", repo.ApplicationUnderTest.Content.TMobileGmbH16530TestautomatisierunInfo, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.ApplicationUnderTest.Content.TMobileGmbH16530TestautomatisierunInfo, "InnerText", "T-Mobile GmbH (16530) Testautomatisierung SQA");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ABMELDEN' at 83;22.", repo.ApplicationUnderTest.ABMELDENInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.ABMELDEN.Click("83;22");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ErneuterLogin' at 106;22.", repo.ApplicationUnderTest.ErneuterLoginInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.ErneuterLogin.Click("106;22");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage TdTag777_Screenshot1
        { get { return repo.ApplicationUnderTest.PCol12.TdTag777Info.GetScreenshot1(new Rectangle(41, 24, 39, 25)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions TdTag777_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
